(function(){"use strict";var e={6418:function(e,o,t){var r=t(3751),n=t(641);const a={id:"app"};function i(e,o,t,r,i,l){const s=(0,n.g2)("router-link"),u=(0,n.g2)("router-view");return(0,n.uX)(),(0,n.CE)("div",a,[(0,n.Lk)("nav",null,[(0,n.bF)(s,{to:"/"},{default:(0,n.k6)((()=>[(0,n.eW)("Home")])),_:1}),(0,n.bF)(s,{to:"/register"},{default:(0,n.k6)((()=>[(0,n.eW)("Cadastro")])),_:1})]),(0,n.bF)(u)])}var l={name:"App"},s=t(6262);const u=(0,s.A)(l,[["render",i]]);var d=u,c=t(6166);const v={class:"home"},m={class:"overlay"},p=(0,n.Lk)("h1",null,"Junte-se à Rede Social de Sobrevivência Zumbi (ZSSN)",-1),h=(0,n.Lk)("p",null,"Compartilhe Recursos e Informações com Outros Sobreviventes em Tempos de Apocalipse.",-1);function k(e,o,t,r,a,i){const l=(0,n.g2)("router-link");return(0,n.uX)(),(0,n.CE)("div",v,[(0,n.Lk)("div",m,[p,h,(0,n.bF)(l,{to:"/login",class:"btn"},{default:(0,n.k6)((()=>[(0,n.eW)("Conecte-se com Outros Sobreviventes")])),_:1}),(0,n.bF)(l,{to:"/register",class:"btn"},{default:(0,n.k6)((()=>[(0,n.eW)("Cadastre-se como Sobrevivente")])),_:1})])])}var L={name:"HomePage"};const f=(0,s.A)(L,[["render",k]]);var b=f,g=t(33);const y={class:"register"},w=(0,n.Lk)("h1",null,"Cadastro de Sobrevivente",-1),I=(0,n.Lk)("legend",null,"Dados Pessoais",-1),_={class:"form-group"},E=(0,n.Lk)("label",{for:"name"},"Nome:",-1),M={class:"form-group"},C=(0,n.Lk)("label",{for:"age"},"Idade:",-1),S={class:"form-group"},T=(0,n.Lk)("label",{for:"gender"},"Sexo:",-1),$=(0,n.Lk)("option",{value:"male"},"Masculino",-1),N=(0,n.Lk)("option",{value:"female"},"Feminino",-1),X=[$,N],x=(0,n.Lk)("legend",null,"Localização",-1),D={class:"form-group"},U=(0,n.Lk)("label",{for:"latitude"},"Latitude:",-1),V={class:"form-group"},F=(0,n.Lk)("label",{for:"longitude"},"Longitude:",-1),O=(0,n.Lk)("legend",null,"Inventário",-1),j={class:"inventory-grid"},A={class:"form-group"},J=(0,n.Lk)("label",{for:"water"},"Água:",-1),q=(0,n.Lk)("option",{value:"0"},"Nenhum",-1),P=["value"],W=(0,n.Lk)("option",{value:"more"},"Mais de 10",-1),z={class:"form-group"},R=(0,n.Lk)("label",{for:"food"},"Alimentação:",-1),Q=(0,n.Lk)("option",{value:"0"},"Nenhum",-1),B=["value"],K=(0,n.Lk)("option",{value:"more"},"Mais de 10",-1),H={class:"form-group"},Z=(0,n.Lk)("label",{for:"medication"},"Medicação:",-1),G=(0,n.Lk)("option",{value:"0"},"Nenhum",-1),Y=["value"],ee=(0,n.Lk)("option",{value:"more"},"Mais de 10",-1),oe={class:"form-group"},te=(0,n.Lk)("label",{for:"ammunition"},"Munição:",-1),re=(0,n.Lk)("option",{value:"0"},"Nenhum",-1),ne=["value"],ae=(0,n.Lk)("option",{value:"more"},"Mais de 10",-1),ie=(0,n.Lk)("button",{type:"submit",class:"btn"},"Cadastrar",-1);function le(e,o,t,a,i,l){return(0,n.uX)(),(0,n.CE)("div",y,[w,(0,n.Lk)("form",{onSubmit:o[21]||(o[21]=(0,r.D$)(((...e)=>l.registerSurvivor&&l.registerSurvivor(...e)),["prevent"]))},[(0,n.Lk)("fieldset",null,[I,(0,n.Lk)("div",_,[E,(0,n.bo)((0,n.Lk)("input",{type:"text",id:"name","onUpdate:modelValue":o[0]||(o[0]=e=>i.name=e),required:""},null,512),[[r.Jo,i.name]])]),(0,n.Lk)("div",M,[C,(0,n.bo)((0,n.Lk)("input",{type:"number",id:"age","onUpdate:modelValue":o[1]||(o[1]=e=>i.age=e),required:""},null,512),[[r.Jo,i.age]])]),(0,n.Lk)("div",S,[T,(0,n.bo)((0,n.Lk)("select",{id:"gender","onUpdate:modelValue":o[2]||(o[2]=e=>i.gender=e),required:""},X,512),[[r.u1,i.gender]])])]),(0,n.Lk)("fieldset",null,[x,(0,n.Lk)("div",D,[U,(0,n.bo)((0,n.Lk)("input",{type:"number",step:"any",id:"latitude","onUpdate:modelValue":o[3]||(o[3]=e=>i.latitude=e),required:""},null,512),[[r.Jo,i.latitude]])]),(0,n.Lk)("div",V,[F,(0,n.bo)((0,n.Lk)("input",{type:"number",step:"any",id:"longitude","onUpdate:modelValue":o[4]||(o[4]=e=>i.longitude=e),required:""},null,512),[[r.Jo,i.longitude]])])]),(0,n.Lk)("fieldset",null,[O,(0,n.Lk)("div",j,[(0,n.Lk)("div",A,[J,(0,n.bo)((0,n.Lk)("select",{id:"water","onUpdate:modelValue":o[5]||(o[5]=e=>i.water=e),required:"",onChange:o[6]||(o[6]=e=>l.checkMoreThanTen("water"))},[q,((0,n.uX)(),(0,n.CE)(n.FK,null,(0,n.pI)(10,(e=>(0,n.Lk)("option",{key:e,value:e},(0,g.v_)(e),9,P))),64)),W],544),[[r.u1,i.water]]),i.showManualInput.water?(0,n.bo)(((0,n.uX)(),(0,n.CE)("input",{key:0,type:"number","onUpdate:modelValue":o[7]||(o[7]=e=>i.waterMore=e),min:"11",onBlur:o[8]||(o[8]=e=>l.handleManualInput("water")),placeholder:"Digite o número de águas"},null,544)),[[r.Jo,i.waterMore]]):(0,n.Q3)("",!0)]),(0,n.Lk)("div",z,[R,(0,n.bo)((0,n.Lk)("select",{id:"food","onUpdate:modelValue":o[9]||(o[9]=e=>i.food=e),required:"",onChange:o[10]||(o[10]=e=>l.checkMoreThanTen("food"))},[Q,((0,n.uX)(),(0,n.CE)(n.FK,null,(0,n.pI)(10,(e=>(0,n.Lk)("option",{key:e,value:e},(0,g.v_)(e),9,B))),64)),K],544),[[r.u1,i.food]]),i.showManualInput.food?(0,n.bo)(((0,n.uX)(),(0,n.CE)("input",{key:0,type:"number","onUpdate:modelValue":o[11]||(o[11]=e=>i.foodMore=e),min:"11",onBlur:o[12]||(o[12]=e=>l.handleManualInput("food")),placeholder:"Digite o número de alimentos"},null,544)),[[r.Jo,i.foodMore]]):(0,n.Q3)("",!0)]),(0,n.Lk)("div",H,[Z,(0,n.bo)((0,n.Lk)("select",{id:"medication","onUpdate:modelValue":o[13]||(o[13]=e=>i.medication=e),required:"",onChange:o[14]||(o[14]=e=>l.checkMoreThanTen("medication"))},[G,((0,n.uX)(),(0,n.CE)(n.FK,null,(0,n.pI)(10,(e=>(0,n.Lk)("option",{key:e,value:e},(0,g.v_)(e),9,Y))),64)),ee],544),[[r.u1,i.medication]]),i.showManualInput.medication?(0,n.bo)(((0,n.uX)(),(0,n.CE)("input",{key:0,type:"number","onUpdate:modelValue":o[15]||(o[15]=e=>i.medicationMore=e),min:"11",onBlur:o[16]||(o[16]=e=>l.handleManualInput("medication")),placeholder:"Digite o número de medicamentos"},null,544)),[[r.Jo,i.medicationMore]]):(0,n.Q3)("",!0)]),(0,n.Lk)("div",oe,[te,(0,n.bo)((0,n.Lk)("select",{id:"ammunition","onUpdate:modelValue":o[17]||(o[17]=e=>i.ammunition=e),required:"",onChange:o[18]||(o[18]=e=>l.checkMoreThanTen("ammunition"))},[re,((0,n.uX)(),(0,n.CE)(n.FK,null,(0,n.pI)(10,(e=>(0,n.Lk)("option",{key:e,value:e},(0,g.v_)(e),9,ne))),64)),ae],544),[[r.u1,i.ammunition]]),i.showManualInput.ammunition?(0,n.bo)(((0,n.uX)(),(0,n.CE)("input",{key:0,type:"number","onUpdate:modelValue":o[19]||(o[19]=e=>i.ammunitionMore=e),min:"11",onBlur:o[20]||(o[20]=e=>l.handleManualInput("ammunition")),placeholder:"Digite o número de munições"},null,544)),[[r.Jo,i.ammunitionMore]]):(0,n.Q3)("",!0)])])]),ie],32)])}t(4114);var se={name:"RegisterSurvivor",data(){return{name:"",age:"",gender:"",latitude:"",longitude:"",water:0,food:0,medication:0,ammunition:0,waterMore:"",foodMore:"",medicationMore:"",ammunitionMore:"",showManualInput:{water:!1,food:!1,medication:!1,ammunition:!1}}},methods:{async registerSurvivor(){try{let e=this.food,o=this.water,t=this.medication,r=this.ammunition;if("more"===this.food&&(e=this.foodMore),"more"===this.water&&(o=this.waterMore),"more"===this.medication&&(t=this.medicationMore),"more"===this.ammunition&&(r=this.ammunitionMore),isNaN(o)||isNaN(e)||isNaN(t)||isNaN(r))throw new Error("Os valores do inventário devem ser números válidos.");const n=await fetch("http://localhost:8000/api/register-survivor/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:this.name,age:this.age,gender:this.gender,last_location:`${this.latitude},${this.longitude}`,inventory:{water:o,food:e,medication:t,ammunition:r}})});if(!n.ok){const e=await n.json();throw new Error("Erro ao cadastrar sobrevivente: "+e.error)}alert("Sobrevivente cadastrado com sucesso"),this.$router.push("/")}catch(e){alert("Erro: "+e.message)}},checkMoreThanTen(e){"more"===this[e]?(this[`${e}More`]="",this.showManualInput[e]=!0):this.showManualInput[e]=!1},handleManualInput(e){parseInt(this[`${e}More`])<11&&(this[e]=parseInt(this[`${e}More`]),this.showManualInput[e]=!1)}}};const ue=(0,s.A)(se,[["render",le]]);var de=ue;const ce={class:"login"},ve=(0,n.Lk)("h1",null,"Bem-vindo à ZSSN",-1),me=(0,n.Lk)("p",null,"Por favor, insira seu nome para continuar:",-1);function pe(e,o,t,a,i,l){return(0,n.uX)(),(0,n.CE)("div",ce,[ve,me,(0,n.bo)((0,n.Lk)("input",{"onUpdate:modelValue":o[0]||(o[0]=e=>i.survivorName=e),type:"text",placeholder:"Seu nome"},null,512),[[r.Jo,i.survivorName]]),(0,n.Lk)("button",{onClick:o[1]||(o[1]=(...e)=>l.login&&l.login(...e))},"Entrar")])}var he={name:"LoginPage",data(){return{survivorName:""}},methods:{async login(){try{const e=await fetch(`http://localhost:8000/api/survivors/get-by-name/?name=${this.survivorName}`);if(!e.ok){if(401===e.status)throw new Error("Sobrevivente infectado");throw new Error("Sobrevivente não encontrado")}const o=await e.json();if(o.survivor.name!=this.survivorName)throw new Error("Sobrevivente não encontrado");{const e=o.survivor;this.$router.push({name:"Dashboard",params:{name:e.name}})}}catch(e){alert("Erro: "+e.message)}}}};const ke=(0,s.A)(he,[["render",pe]]);var Le=ke;const fe=(0,n.Lk)("h1",null,"Atualizar Localização",-1),be=(0,n.Fv)('<label for="latitude">Latitude:</label><input class="input_latitude" type="number" step="any" id="latitude" name="latitude" required><label for="longitude">Longitude:</label><input type="number" class="input_latitude" step="any" id="longitude" name="longitude" required><button type="submit">Atualizar</button>',5),ge=[be];function ye(e,o,t,a,i,l){return(0,n.uX)(),(0,n.CE)("div",null,[fe,(0,n.Lk)("form",{class:"form_latitude",onSubmit:o[0]||(o[0]=(0,r.D$)(((...e)=>l.updateLocation&&l.updateLocation(...e)),["prevent"]))},ge,32),(0,n.Lk)("button",{type:"button",onClick:o[1]||(o[1]=(...e)=>l.goToDashboard&&l.goToDashboard(...e))},"Voltar ao Dashboard")])}var we={name:"UpdateLocation",methods:{updateLocation(){const e=document.getElementById("latitude").value,o=document.getElementById("longitude").value;try{fetch(`http://localhost:8000/api/api/survivors/${this.$route.params.name}/update_location/`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({last_location:`${e},${o}`})}),alert("Localização atualizada com sucesso!"),this.$router.push(`/dashboard/${this.$route.params.name}`)}catch(t){console.error("Erro ao atualizar localização:",t)}},goToDashboard(){this.$router.push(`/dashboard/${this.$route.params.name}`)}}};const Ie=(0,s.A)(we,[["render",ye]]);var _e=Ie;const Ee=(0,n.Lk)("h1",null,"Reportar Infecção",-1),Me=(0,n.Lk)("label",{for:"reported_survivor_name"},"Nome do infectado:",-1),Ce=(0,n.Lk)("button",{type:"submit"},"Reportar Infecção",-1);function Se(e,o,t,a,i,l){return(0,n.uX)(),(0,n.CE)("div",null,[Ee,(0,n.Lk)("form",{class:"form_infection",onSubmit:o[1]||(o[1]=(0,r.D$)(((...e)=>l.reportInfection&&l.reportInfection(...e)),["prevent"]))},[Me,(0,n.bo)((0,n.Lk)("input",{type:"text",class:"input_infection",id:"reported_survivor_name","onUpdate:modelValue":o[0]||(o[0]=e=>i.reportedSurvivorName=e),required:""},null,512),[[r.Jo,i.reportedSurvivorName]]),Ce],32),(0,n.Lk)("button",{type:"button",onClick:o[2]||(o[2]=(...e)=>l.goToDashboard&&l.goToDashboard(...e))},"Voltar ao Dashboard")])}var Te={name:"ReportInfection",data(){return{reportedSurvivorName:""}},methods:{async reportInfection(){const e=this.$route.params.name,o=this.reportedSurvivorName;try{const t=await fetch(`http://localhost:8000/api/api/survivors/${o}/mark_infected/`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({reporter_name:e})});if(!t.ok){const e=await t.json();throw new Error(e.error||"Erro ao reportar infecção")}const r=await t.json();alert(r.status),this.$router.push(`/dashboard/${e}`)}catch(t){console.error("Erro ao reportar infecção:",t),alert(t.message)}},goToDashboard(){this.$router.push(`/dashboard/${this.$route.params.name}`)}}};const $e=(0,s.A)(Te,[["render",Se]]);var Ne=$e;const Xe={class:"container"},xe=(0,n.Lk)("h1",null,"Trocar Itens",-1),De={class:"search-section"},Ue=(0,n.Lk)("label",{for:"username"},"Nome do Sobrevivente:",-1),Ve={class:"grid"},Fe={class:"inventario_trade"},Oe=(0,n.Lk)("h2",null,"Inventário do Sobrevivente Logado",-1),je={class:"styled-table"},Ae=(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th",null,"Item"),(0,n.Lk)("th",null,"Quantidade")])],-1),Je=(0,n.Lk)("td",null,"Água",-1),qe=(0,n.Lk)("td",null,"Comida",-1),Pe=(0,n.Lk)("td",null,"Medicação",-1),We=(0,n.Lk)("td",null,"Munição",-1),ze={key:0,class:"trade-button"},Re={key:1,class:"trade-inputs"},Qe={class:"styled-table"},Be=(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th",null,"Enviar"),(0,n.Lk)("th",null,"Receber")])],-1),Ke=["onUpdate:modelValue","max"],He=["onUpdate:modelValue","max"],Ze={key:2,class:"inventario_trade"},Ge=(0,n.Lk)("h2",null,"Inventário do Sobrevivente Selecionado",-1),Ye={key:0,class:"styled-table"},eo=(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th",null,"Item"),(0,n.Lk)("th",null,"Quantidade")])],-1),oo=(0,n.Lk)("td",null,"Água",-1),to=(0,n.Lk)("td",null,"Comida",-1),ro=(0,n.Lk)("td",null,"Medicação",-1),no=(0,n.Lk)("td",null,"Munição",-1),ao={key:1},io=(0,n.Lk)("p",null,"Inventário não encontrado para o sobrevivente selecionado.",-1),lo=[io],so=(0,n.Lk)("h2",null,"Tabela de Pontuação dos Itens",-1),uo={class:"styled-table"},co=(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th",null,"Item"),(0,n.Lk)("th",null,"Pontuação")])],-1);function vo(e,o,t,a,i,l){return(0,n.uX)(),(0,n.CE)("div",Xe,[xe,(0,n.Lk)("div",De,[Ue,(0,n.bo)((0,n.Lk)("input",{type:"text",id:"username","onUpdate:modelValue":o[0]||(o[0]=e=>i.username=e),required:""},null,512),[[r.Jo,i.username]]),(0,n.Lk)("button",{onClick:o[1]||(o[1]=(...e)=>l.getUserInventory&&l.getUserInventory(...e))},"Buscar Inventário")]),(0,n.Lk)("div",Ve,[(0,n.Lk)("div",Fe,[Oe,(0,n.Lk)("h3",null,(0,g.v_)(e.$route.params.name),1),(0,n.Lk)("table",je,[Ae,(0,n.Lk)("tbody",null,[(0,n.Lk)("tr",null,[Je,(0,n.Lk)("td",null,(0,g.v_)(i.userInventory.water),1)]),(0,n.Lk)("tr",null,[qe,(0,n.Lk)("td",null,(0,g.v_)(i.userInventory.food),1)]),(0,n.Lk)("tr",null,[Pe,(0,n.Lk)("td",null,(0,g.v_)(i.userInventory.medication),1)]),(0,n.Lk)("tr",null,[We,(0,n.Lk)("td",null,(0,g.v_)(i.userInventory.ammunition),1)])])])]),i.showInventory&&!i.tradeStarted?((0,n.uX)(),(0,n.CE)("div",ze,[(0,n.Lk)("button",{onClick:o[2]||(o[2]=(...e)=>l.startTrade&&l.startTrade(...e))},"Iniciar Troca")])):(0,n.Q3)("",!0),i.tradeStarted?((0,n.uX)(),(0,n.CE)("div",Re,[(0,n.Lk)("table",Qe,[Be,(0,n.Lk)("tbody",null,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(i.tradeItems,(e=>((0,n.uX)(),(0,n.CE)("tr",{class:"items",key:e.name},[(0,n.Lk)("td",null,[(0,n.eW)((0,g.v_)(e.name)+": ",1),(0,n.bo)((0,n.Lk)("input",{type:"number","onUpdate:modelValue":o=>e.send=o,max:l.getMaxSend(e.name),min:"0"},null,8,Ke),[[r.Jo,e.send,void 0,{number:!0}]])]),(0,n.Lk)("td",null,[(0,n.eW)((0,g.v_)(e.name)+": ",1),(0,n.bo)((0,n.Lk)("input",{type:"number","onUpdate:modelValue":o=>e.receive=o,max:l.getMaxReceive(e.name),min:"0"},null,8,He),[[r.Jo,e.receive,void 0,{number:!0}]])])])))),128))])]),(0,n.Lk)("button",{onClick:o[3]||(o[3]=(...e)=>l.confirmTrade&&l.confirmTrade(...e))},"Confirmar Troca")])):(0,n.Q3)("",!0),i.showInventory?((0,n.uX)(),(0,n.CE)("div",Ze,[Ge,(0,n.Lk)("h3",null,(0,g.v_)(i.username),1),i.selectedSurvivor?((0,n.uX)(),(0,n.CE)("table",Ye,[eo,(0,n.Lk)("tbody",null,[(0,n.Lk)("tr",null,[oo,(0,n.Lk)("td",null,(0,g.v_)(i.selectedSurvivorInventory.water),1)]),(0,n.Lk)("tr",null,[to,(0,n.Lk)("td",null,(0,g.v_)(i.selectedSurvivorInventory.food),1)]),(0,n.Lk)("tr",null,[ro,(0,n.Lk)("td",null,(0,g.v_)(i.selectedSurvivorInventory.medication),1)]),(0,n.Lk)("tr",null,[no,(0,n.Lk)("td",null,(0,g.v_)(i.selectedSurvivorInventory.ammunition),1)])])])):((0,n.uX)(),(0,n.CE)("div",ao,lo))])):(0,n.Q3)("",!0)]),so,(0,n.Lk)("table",uo,[co,(0,n.Lk)("tbody",null,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(i.itemScores,((e,o)=>((0,n.uX)(),(0,n.CE)("tr",{key:o},[(0,n.Lk)("td",null,(0,g.v_)(o),1),(0,n.Lk)("td",null,(0,g.v_)(e),1)])))),128))])]),(0,n.Lk)("button",{onClick:o[4]||(o[4]=(...e)=>l.goToDashboard&&l.goToDashboard(...e))},"Voltar ao Dashboard")])}var mo={name:"TradeItems",data(){return{username:"",userInventory:{},itemScores:{"Água":4,Comida:3,"Medicação":2,"Munição":1},selectedSurvivorInventory:[],selectedSurvivor:!1,showInventory:!1,tradeStarted:!1,tradeItems:[{name:"Água",send:0,receive:0},{name:"Comida",send:0,receive:0},{name:"Medicação",send:0,receive:0},{name:"Munição",send:0,receive:0}],itemTranslation:{"Água":"water",Comida:"food","Medicação":"medication","Munição":"ammunition"}}},methods:{async getUserInventory(){const e=this.username;try{const o=await fetch(`http://localhost:8000/api/survivors/get-by-name/?name=${e}`);if(!o.ok){if(401===o.status)throw new Error("Sobrevivente infectado");throw new Error("Sobrevivente não encontrado")}const t=await o.json();if(this.selectedSurvivor=t.survivor,this.selectedSurvivor.name===this.$route.params.name)throw new Error("Você não pode trocar itens com você mesmo");this.selectedSurvivorInventory=t.inventory,this.showInventory=!0,this.selectedSurvivor=!0}catch(o){alert("Erro ao obter o inventário: "+o.message)}},async loadUserInventory(){const e=this.$route.params.name;try{const o=await fetch(`http://localhost:8000/api/survivors/get-by-name/?name=${e}`);if(!o.ok)throw new Error("Erro ao carregar inventário do usuário");const t=await o.json();this.userInventory=t.inventory}catch(o){alert("Erro ao carregar inventário do usuário: "+o.message)}},startTrade(){this.tradeStarted=!0},getMaxReceive(e){const o=this.itemTranslation[e];return this.selectedSurvivorInventory[o.toLowerCase()]||0},getMaxSend(e){const o=this.itemTranslation[e];return this.userInventory[o.toLowerCase()]||0},async sendTrade(){try{const e=e=>this.itemTranslation[e.name]||e.name,o=this.$route.params.name,t=await fetch(`http://localhost:8000/api/api/inventories/${o}/trade/`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({other_inventory:this.username,offered_items:this.tradeItems.map((o=>({name:e(o),quantity:o.send}))),requested_items:this.tradeItems.map((o=>({name:e(o),quantity:o.receive})))})}),r=await t.json();t.ok?alert("Troca realizada com sucesso! "+r.status):alert("Erro ao realizar troca: "+r.error)}catch(e){alert("Erro ao realizar troca: "+e.message)}},async validateTrade(){try{for(const e of this.tradeItems){const o=parseInt(e.send),t=parseInt(e.receive);if(isNaN(o)||isNaN(t)||o<0||t<0)throw new Error("Os valores digitados devem ser números inteiros positivos");if(o>this.getMaxSend(e.name)||t>this.getMaxReceive(e.name))throw new Error("Os valores digitados excedem a quantidade disponível")}if(this.tradeItems.every((e=>0===e.send&&0===e.receive)))throw new Error("Nenhum item foi selecionado para troca");if(this.tradeItems.every((e=>0===e.send))||this.tradeItems.every((e=>0===e.receive)))throw new Error("A troca deve ser feita de forma justa");this.sendTrade();for(const e of this.tradeItems)e.send=0,e.receive=0;alert("Troca validada!")}catch(e){alert("Erro ao validar a troca: "+e.message)}},confirmTrade(){this.validateTrade()},goToDashboard(){this.$router.push(`/dashboard/${this.$route.params.name}`)}},mounted(){this.loadUserInventory()}};const po=(0,s.A)(mo,[["render",vo]]);var ho=po;const ko={class:"dashboard"},Lo=(0,n.Lk)("h1",null,"Dashboard do Sobrevivente",-1),fo={key:0},bo={class:"infos"},go={class:"profile"},yo=(0,n.Lk)("strong",null,"Idade:",-1),wo=(0,n.Lk)("strong",null,"Gênero:",-1),Io=(0,n.Lk)("strong",null,"Última Localização:",-1),_o={class:"inventario"},Eo=(0,n.Lk)("h3",null,"Inventário",-1),Mo={class:"inventario_li"},Co=(0,n.Lk)("strong",null,"Água:",-1),So=(0,n.Lk)("strong",null,"Comida:",-1),To=(0,n.Lk)("strong",null,"Medicação:",-1),$o=(0,n.Lk)("strong",null,"Munição:",-1),No={class:"opcoes"},Xo=(0,n.Lk)("h3",null,"Opções",-1),xo={class:"submenu"},Do={key:1},Uo=(0,n.Lk)("p",null,"Carregando...",-1),Vo=[Uo];function Fo(e,o,t,r,a,i){const l=(0,n.g2)("router-link");return(0,n.uX)(),(0,n.CE)("div",ko,[Lo,a.survivor?((0,n.uX)(),(0,n.CE)("div",fo,[(0,n.Lk)("div",bo,[(0,n.Lk)("div",go,[(0,n.Lk)("h2",null,"Bem-vindo, "+(0,g.v_)(a.survivor.survivor.name),1),(0,n.Lk)("p",null,[yo,(0,n.eW)(" "+(0,g.v_)(a.survivor.survivor.age),1)]),(0,n.Lk)("p",null,[wo,(0,n.eW)(" "+(0,g.v_)(a.survivor.survivor.gender),1)]),(0,n.Lk)("p",null,[Io,(0,n.eW)(" "+(0,g.v_)(a.survivor.survivor.last_location),1)])]),(0,n.Lk)("div",_o,[Eo,(0,n.Lk)("ul",Mo,[(0,n.Lk)("li",null,[Co,(0,n.eW)(" "+(0,g.v_)(a.survivor.inventory.water),1)]),(0,n.Lk)("li",null,[So,(0,n.eW)(" "+(0,g.v_)(a.survivor.inventory.food),1)]),(0,n.Lk)("li",null,[To,(0,n.eW)(" "+(0,g.v_)(a.survivor.inventory.medication),1)]),(0,n.Lk)("li",null,[$o,(0,n.eW)(" "+(0,g.v_)(a.survivor.inventory.ammunition),1)])])])]),(0,n.Lk)("div",No,[Xo,(0,n.Lk)("ul",xo,[(0,n.Lk)("li",null,[(0,n.bF)(l,{to:`/update-location/${a.survivor.survivor.name}`},{default:(0,n.k6)((()=>[(0,n.eW)("Atualizar Localização")])),_:1},8,["to"])]),(0,n.Lk)("li",null,[(0,n.bF)(l,{to:`/report-infection/${a.survivor.survivor.name}`},{default:(0,n.k6)((()=>[(0,n.eW)("Marcar como Infectado")])),_:1},8,["to"])]),(0,n.Lk)("li",null,[(0,n.bF)(l,{to:`/trade-items/${a.survivor.survivor.name}`},{default:(0,n.k6)((()=>[(0,n.eW)("Trocar Itens")])),_:1},8,["to"])]),(0,n.Lk)("li",null,[(0,n.bF)(l,{to:"/reports"},{default:(0,n.k6)((()=>[(0,n.eW)("Relatórios")])),_:1})])])])])):((0,n.uX)(),(0,n.CE)("div",Do,Vo))])}var Oo={name:"DashboardPage",data(){return{survivor:null}},created(){this.fetchSurvivorData()},methods:{async fetchSurvivorData(){const e=this.$route.params.name;try{const o=await fetch(`http://localhost:8000/api/survivors/get-by-name/?name=${e}`);if(!o.ok)throw new Error("Erro ao buscar dados do sobrevivente");this.survivor=await o.json()}catch(o){console.error("Erro ao buscar dados do sobrevivente:",o)}}}};const jo=(0,s.A)(Oo,[["render",Fo]]);var Ao=jo;const Jo=e=>((0,n.Qi)("data-v-fac0e312"),e=e(),(0,n.jt)(),e),qo={class:"reports-page"},Po=Jo((()=>(0,n.Lk)("h1",null,"Relatórios",-1))),Wo={key:0,class:"reports-container"},zo=Jo((()=>(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th",null,"Métrica"),(0,n.Lk)("th",null,"Valor")])],-1))),Ro=Jo((()=>(0,n.Lk)("td",null,"Porcentagem de sobreviventes infectados",-1))),Qo=Jo((()=>(0,n.Lk)("td",null,"Porcentagem de sobreviventes não infectados",-1))),Bo=Jo((()=>(0,n.Lk)("td",null,"Quantidade média de recursos por sobrevivente",-1))),Ko=Jo((()=>(0,n.Lk)("td",null,"Pontos perdidos devido a sobreviventes infectados",-1))),Ho={key:1},Zo=Jo((()=>(0,n.Lk)("p",null,"Carregando relatórios...",-1))),Go=[Zo];function Yo(e,o,t,r,a,i){return(0,n.uX)(),(0,n.CE)("div",qo,[Po,a.reports?((0,n.uX)(),(0,n.CE)("div",Wo,[(0,n.Lk)("table",null,[zo,(0,n.Lk)("tbody",null,[(0,n.Lk)("tr",null,[Ro,(0,n.Lk)("td",null,(0,g.v_)(a.reports.infected_percentage.toFixed(2))+"%",1)]),(0,n.Lk)("tr",null,[Qo,(0,n.Lk)("td",null,(0,g.v_)(a.reports.uninfected_percentage.toFixed(2))+"%",1)]),(0,n.Lk)("tr",null,[Bo,(0,n.Lk)("td",null,[(0,n.Lk)("ul",null,[(0,n.Lk)("li",null,"Água: "+(0,g.v_)(a.reports.avg_water.toFixed(2)),1),(0,n.Lk)("li",null,"Alimentação: "+(0,g.v_)(a.reports.avg_food.toFixed(2)),1),(0,n.Lk)("li",null,"Medicação: "+(0,g.v_)(a.reports.avg_medication.toFixed(2)),1),(0,n.Lk)("li",null,"Munição: "+(0,g.v_)(a.reports.avg_ammunition.toFixed(2)),1)])])]),(0,n.Lk)("tr",null,[Ko,(0,n.Lk)("td",null,(0,g.v_)(a.reports.infected_points_lost),1)])])])])):((0,n.uX)(),(0,n.CE)("div",Ho,Go))])}var et={name:"ReportsPage",data(){return{reports:null}},async created(){try{const e=await fetch("http://localhost:8000/api/reports/");if(!e.ok)throw new Error("Erro ao buscar relatórios");this.reports=await e.json()}catch(e){alert("Erro: "+e.message)}}};const ot=(0,s.A)(et,[["render",Yo],["__scopeId","data-v-fac0e312"]]);var tt=ot;const rt=[{path:"/",component:b},{path:"/register",component:de},{path:"/login",component:Le},{path:"/dashboard/:name",name:"Dashboard",component:Ao},{path:"/update-location/:name",component:_e},{path:"/report-infection/:name",component:Ne},{path:"/trade-items/:name",component:ho},{path:"/reports",component:tt}],nt=(0,c.aE)({history:(0,c.LA)(),routes:rt});var at=nt;(0,r.Ef)(d).use(at).mount("#app")}},o={};function t(r){var n=o[r];if(void 0!==n)return n.exports;var a=o[r]={exports:{}};return e[r].call(a.exports,a,a.exports,t),a.exports}t.m=e,function(){var e=[];t.O=function(o,r,n,a){if(!r){var i=1/0;for(d=0;d<e.length;d++){r=e[d][0],n=e[d][1],a=e[d][2];for(var l=!0,s=0;s<r.length;s++)(!1&a||i>=a)&&Object.keys(t.O).every((function(e){return t.O[e](r[s])}))?r.splice(s--,1):(l=!1,a<i&&(i=a));if(l){e.splice(d--,1);var u=n();void 0!==u&&(o=u)}}return o}a=a||0;for(var d=e.length;d>0&&e[d-1][2]>a;d--)e[d]=e[d-1];e[d]=[r,n,a]}}(),function(){t.d=function(e,o){for(var r in o)t.o(o,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:o[r]})}}(),function(){t.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){t.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)}}(),function(){var e={524:0};t.O.j=function(o){return 0===e[o]};var o=function(o,r){var n,a,i=r[0],l=r[1],s=r[2],u=0;if(i.some((function(o){return 0!==e[o]}))){for(n in l)t.o(l,n)&&(t.m[n]=l[n]);if(s)var d=s(t)}for(o&&o(r);u<i.length;u++)a=i[u],t.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return t.O(d)},r=self["webpackChunkfrontend"]=self["webpackChunkfrontend"]||[];r.forEach(o.bind(null,0)),r.push=o.bind(null,r.push.bind(r))}();var r=t.O(void 0,[504],(function(){return t(6418)}));r=t.O(r)})();
//# sourceMappingURL=app.686c6186.js.map